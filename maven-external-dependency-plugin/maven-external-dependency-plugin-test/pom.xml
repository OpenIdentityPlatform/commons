<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.savage7.maven.plugins</groupId>
	<artifactId>maven-external-dependency-plugin-test</artifactId>
	<packaging>jar</packaging>
	<version>2.0.7-SNAPSHOT</version>
	<name>${project.groupId}.${project.artifactId}</name>
	<url>http://code.google.com/p/maven-external-dependency-plugin/</url>
	
    <!-- BUILD PROPERTIES -->
    <properties>
        <!-- PROJECT ENCODING PROPERTIES -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>
    
	<build><finalName>${project.groupId}.${project.artifactId}</finalName>
		<extensions>
			<extension>
				<!-- allow follow redirects -->
	        	<groupId>org.apache.maven.wagon</groupId>
	        	<artifactId>wagon-http-lightweight</artifactId>
	        	<version>2.2</version>
           </extension>
		</extensions>
		<plugins>

			<!-- JAVA PROJECT COMPILER -->

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>


			<!-- EXTERNAL DEPENDENCY RESOLVER -->

			<plugin>
				<groupId>com.savage7.maven.plugins</groupId>
				<artifactId>maven-external-dependency-plugin</artifactId>
				<version>2.0.7-SNAPSHOT</version>
				<inherited>false</inherited>
				<configuration>
					<stagingDirectory>
						${project.build.directory}/dependencies/
                    </stagingDirectory>
					<createChecksum>true</createChecksum>
					<skipChecksumVerification>false</skipChecksumVerification>
					<force>false</force>
					<artifactItems>

						<!-- THIS JAR IS HOSTED ON GOOGLE CODE, BUT IS NOT AVAILABLE IN A MAVEN 
							REPO -->
						<artifactItem>
							<groupId>com.google.code</groupId>
							<artifactId>google-api-translate-java</artifactId>
							<version>0.97</version>
							<packaging>jar</packaging>
							<downloadUrl>
								http://google-api-translate-java.googlecode.com/files/{artifactId}-{version}.jar
                        </downloadUrl>
						</artifactItem>

						<!-- HERE IS AN EXAMPLE OF AN ADOBE FLASH LIBRARY (SWC) HOSTED ON GOOGLE 
							CODE, BUT NOT AVAILABLE IN A MAVEN REPO -->
						<artifactItem>
							<groupId>org.papervision3d</groupId>
							<artifactId>Papervision3D</artifactId>
							<version>2.1.932</version>
							<packaging>swc</packaging>
							<downloadUrl>
								http://papervision3d.googlecode.com/files/{artifactId}_{version}.{packaging}
                        </downloadUrl>
						</artifactItem>

						<!-- HERE IS AN EXAMPLE OF A FILE USING A CLASSIFIER AND A CHECKSUM 
							VERIFICATION ON THE DOWNLOADED FILE -->
						<artifactItem>
							<groupId>org.apache.ant</groupId>
							<artifactId>apache-ant</artifactId>
							<version>1.8.4</version>
							<classifier>bin</classifier>
							<packaging>zip</packaging>
							<downloadUrl>
								http://apache.securedservers.com/ant/binaries/{artifactId}-{version}-{classifier}.zip
                        </downloadUrl>
							<checksum>f1fe34f9de8b40cb8811a6286faec4ec7a35ba23</checksum>
						</artifactItem>

						<!-- HERE IS AN EXAMPLE OF AN ARTIFACT EXTRACTED FROM A ZIP FILE -->
						<artifactItem>
							<groupId>com.google.code</groupId>
							<artifactId>tweener</artifactId>
							<version>1.33.74</version>
							<packaging>swc</packaging>
							<downloadUrl>
								http://tweener.googlecode.com/files/tweener_1_33_74_as3_swc.zip
                        </downloadUrl>
							<extractFile>tweener.swc</extractFile>
						</artifactItem>

						<!--extract .gz file-->
						<artifactItem>
							<groupId>com.maxmind.geoip</groupId>
							<artifactId>GeoIP.dat</artifactId>
							<version>${project.version}</version>
							<packaging>dat</packaging>
							<downloadUrl><![CDATA[
								http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/{artifactId}.gz
							]]></downloadUrl>
							<extractFile>{artifactId}</extractFile>
						</artifactItem>
						<!-- HERE IS AN EXAMPLE OF AN ARTIFACT DEFINED THAT DOWNLOADS A FILE 
							THAT CONTAINS A SHA1 CHECKSUM USED BY ANOTHER ALREADY MAVEN HOSTED ARTIFACT. 
							PLEASE NOTE, THIS DEPENDENCY WILL FAIL TO INSTALL SINCE THE GROUP ID, ARTIFACT 
							ID, and VERSION ARE A MISMATCH -->
						<!-- <artifactItem> <groupId>com.imaginary</groupId> <artifactId>non-existant</artifactId> 
							<version>1.0.0</version> <packaging>jar</packaging> <downloadUrl> http://repo1.maven.org/maven2/org/apache/ant/ant/1.8.0/ant-1.8.0.jar 
							</downloadUrl> <skipChecksumVerification>false</skipChecksumVerification> 
							</artifactItem> -->


						<!-- DIFFERENT CHECKSUMS FOR DOWNLOAD FILE AND EXTRACTED FILE -->
						<!-- 
						<artifactItem>
							<groupId>de.innosystec</groupId>
							<artifactId>java-unrar</artifactId>
							<version>0.5</version>
							<packaging>jar</packaging>
							<downloadUrl>
								https://github.com/downloads/edmund-wagner/junrar/java-unrar-{version}.zip
				            </downloadUrl>
							<checksum>2C55D845394FAA6A6B5C2C477E280BC50D73DF32</checksum>
							<install>true</install>
							<force>false</force>
							<extractFile>java-unrar/java-unrar-{version}.jar</extractFile>
							<extractFileChecksum>111074096B6BDCE79FA09842143C336A5CF64FCB</extractFileChecksum>
						</artifactItem>
						 -->

					</artifactItems>

				</configuration>
				<executions>
					<execution>
						<id>clean-external-dependencies</id>
						<phase>clean</phase>
						<goals>
<!--							 mvn com.savage7.maven.plugins:maven-external-dependency-plugin:clean-external -->
							<goal>clean-external</goal>
						</goals>
					</execution>
					<execution>
						<id>resolve-install-external-dependencies</id>
						<phase>process-resources</phase>
						<goals>
<!--							 mvn com.savage7.maven.plugins:maven-external-dependency-plugin:resolve-external -->
							<goal>resolve-external</goal>

<!--							 mvn com.savage7.maven.plugins:maven-external-dependency-plugin:install-external -->
							<goal>install-external</goal>
						</goals>
					</execution>
					<execution>
						<id>deploy-external-dependencies</id>
						<phase>deploy</phase>
						<goals>
<!--							 mvn com.savage7.maven.plugins:maven-external-dependency-plugin:deploy-external -->
							<goal>deploy-external</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>


		<!-- IF USING THE WEBDEV PROTOCOL, THE FOLLOWING EXTENTIONS MAY BE REQUIRED -->
		<!-- <extensions> -->
		<!-- <extension> -->
		<!-- <groupId>org.apache.maven.wagon</groupId> -->
		<!-- <artifactId>wagon-webdav</artifactId> -->
		<!-- <version>1.0-beta-2</version> -->
		<!-- </extension> -->
		<!-- <extension> -->
		<!-- <groupId>commons-logging</groupId> -->
		<!-- <artifactId>commons-logging</artifactId> -->
		<!-- <version>1.1</version> -->
		<!-- </extension> -->
		<!-- </extensions> -->

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.savage7.maven.plugins
										</groupId>
										<artifactId>
											maven-external-dependency-plugin
										</artifactId>
										<versionRange>
											[0.5-SNAPSHOT,)
										</versionRange>
										<goals>
											<goal>
												resolve-external
											</goal>
											<goal>
												install-external
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


	<!-- PROJECT DEPENDENCIES -->

	<dependencies>

		<dependency>
			<groupId>com.google.code</groupId>
			<artifactId>google-api-translate-java</artifactId>
			<version>0.97</version>
		</dependency>

		<dependency>
			<groupId>org.papervision3d</groupId>
			<artifactId>Papervision3D</artifactId>
			<version>2.1.932</version>
			<type>swc</type>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		    <version>20090211</version>
		</dependency>		

	</dependencies>
</project>
