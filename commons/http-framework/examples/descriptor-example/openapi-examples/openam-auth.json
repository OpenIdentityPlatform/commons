{
    "swagger": "2.0",
    "info": {
        "title": "OpenAM Authentication",
        "description": "A useful non-CREST API",
        "version": "2.0"
    },
    "host": "openam.example.com:8443",
    "schemes": [
        "https"
    ],
    "basePath": "/openam/json",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/authenticate": {
            "post": {
                "summary": "Authenticate",
                "description": "Authenticate a user.\n\nThe simplest user name/password authentication returns a `tokenId`\nthat applications can present as a cookie value\nfor other operations that require authentication.\n\nThe type of `tokenId` returned varies\ndepending on whether stateless sessions are enabled\nin the realm to which the user authenticates.\n\n*   If stateless sessions are not enabled,\n    the tokenId is an OpenAM SSO token.\n*   If stateless sessions are enabled,\n    the `tokenId` is an OpenAM SSO token\n    that includes an encoded OpenAM session.\n\nThe size of the `tokenId` for stateless sessions (2000 bytes or greater)\nis considerably longer than for stateful sessions (approximately 100 bytes).\n\nOpenAM supports zero-page login in one step,\nand also a challenge/response mechanism.\n\nWhen authentication depends on the client IP address\nand OpenAM lies behind a load balancer or proxy layer,\nconfigure the load balancer or proxy\nto send the address by using the `X-Forwarded-For` header,\nand configure OpenAM to consume and forward the header as necessary.\n\nWhen authenticating with Windows Desktop SSO, use HTTP Basic authentication.\nAdd an `Authorization` header containing the string `Basic`,\nfollowed by a base64-encoded string of the username,\na colon character, and the password.\n",
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "name": "authIndexType",
                        "in": "query",
                        "description": "Type of additional information provided for authentication.\n\n*   `composite` - Set the value to a composite advice string.\n*   `level` - Set the value to the authentication level.\n*   `module` - Set the value to the name of an authentication module.\n*   `resource` - Set the value to a URL protected by an OpenAM policy.\n*   `role` - Set the value to an OpenAM role.\n*   `service` - Set the value to the name of an authentication chain.\n*   `user` - Set the value to an OpenAM user ID.\n",
                        "type": "string",
                        "enum": [
                            "composite",
                            "level",
                            "module",
                            "resource",
                            "role",
                            "service",
                            "user"
                        ]
                    },
                    {
                        "name": "authIndexValue",
                        "in": "query",
                        "description": "A value that corresponds to the `authIndexType`.",
                        "type": "string"
                    },
                    {
                        "name": "noSession",
                        "in": "query",
                        "description": "If `true`, authenticate without requesting a session.",
                        "type": "boolean"
                    },
                    {
                        "name": "realm",
                        "in": "query",
                        "description": "Realm containing the user profile, such as `myRealm`.",
                        "type": "string"
                    },
                    {
                        "name": "sessionUpgradeSSOTokenID",
                        "in": "query",
                        "description": "Set this to a previously issued `tokenId` value to request session upgrade.",
                        "type": "string"
                    },
                    {
                        "name": "X-OpenAM-Username",
                        "in": "header",
                        "description": "User identifier, such as `demo`.\n\nUse with an empty body and `X-OpenAM-Password` for zero-page login.\n",
                        "type": "string"
                    },
                    {
                        "name": "X-OpenAM-Password",
                        "in": "header",
                        "description": "User password, such as `changeit`.\nUse with an empty body and `X-OpenAM-Username` for zero-page login.\n",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Optional empty JSON object used with `X-OpenAM-Username` and `X-OpenAM-Password` for zero-page login, used without to begin a challenge/response sequence, or a response to a challenge supplied in a previous request to OpenAM.\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "authId": {
                                    "type": "string",
                                    "description": "JSON Web Token (JWT) that uniquely identifies the authentication context to OpenAM, and so must also be sent back with the requests.\n"
                                },
                                "template": {
                                    "type": "string"
                                },
                                "stage": {
                                    "type": "string"
                                },
                                "callbacks": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "description": "One of the following.\n\n  *   `ConfirmationCallback` - Used to ask for a confirmation such as Yes, No, or Cancel and retrieve the selection.\n  *   `HiddenValueCallback` - Used to return form values that are not visually rendered to the end user.\n  *   `HttpCallback` - Used for HTTP handshake negotiations.\n  *   `LanguageCallback` - Used to retrieve the locale for localizing text presented to the end user.\n  *   `NameCallback` - Used to retrieve a name string.\n  *   `PasswordCallback` - Used to retrieve a password value.\n  *   `RedirectCallback` - Used to redirect the client user-agent.\n  *   `ScriptTextOutputCallback` - Used to insert a script into the page presented to the end user. The script can, for example, collect data about the user's environment.\n  *   `TextInputCallback` - Used to retrieve text input from the end user.\n  *   `TextOutputCallback` - Used to display a message to the end user.\n  *   `X509CertificateCallback` - Used to retrieve the content of an x.509 certificate.\n",
                                                "enum": [
                                                    "ChoiceCallback",
                                                    "ConfirmationCallback",
                                                    "HiddenValueCallback",
                                                    "HttpCallback",
                                                    "LanguageCallback",
                                                    "NameCallback",
                                                    "PasswordCallback",
                                                    "RedirectCallback",
                                                    "ScriptTextOutputCallback",
                                                    "TextInputCallback",
                                                    "TextOutputCallback",
                                                    "X509CertificateCallback"
                                                ]
                                            },
                                            "output": {
                                                "description": "Name-value pairs of output to format and display to the user",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "A `prompt` text to display to the user"
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "A `prompt` text"
                                                        }
                                                    }
                                                }
                                            },
                                            "input": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "A variable name to populate in the response"
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Populate this with the user's response"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with new session token.\n\nIn subsequent REST calls, send the session token\nas the value of a header\nwhose name matches that of the OpenAM session cookie\n(default, `iPlanetDirectoryPro`) as proof of authentication.\nOnce a user has authenticated,\nit is _not_ necessary to insert login credentials\nin the HTTP header in subsequent REST API calls.\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "tokenId": {
                                    "type": "string",
                                    "description": "SSO token, not returned when `noSession` is set to `true`."
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Result message"
                                },
                                "successUrl": {
                                    "type": "string",
                                    "description": "Location to redirect the user-agent"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "tokenId": "AQIC5w...NTcy*",
                                "successUrl": "/openam/console"
                            }
                        }
                    },
                    "401": {
                        "description": "Failed authentication",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "description": "HTTP status code (`401`)"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "HTTP status reason (`Unauthorized`)"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Additional information about the failure"
                                },
                                "failureUrl": {
                                    "type": "string",
                                    "description": "Location to redirect the user-agent"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
