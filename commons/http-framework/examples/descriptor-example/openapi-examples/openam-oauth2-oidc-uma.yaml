swagger: "2.0"
info:
  title: OpenAM Support for OAuth 2.0 and OAuth 2.0-based APIs
  description: |
    Since OpenAPI does not permit HTTP method overloading,
    the requests for the different grant types (aka flows)
    are all mashed together.

    For another example, see
    <https://www.snip2code.com/Snippet/122743/Swagger-2-0-Declaration-for-OAuth-2-0-en>.

  version: "1.0"
host: openam.example.com:8443
schemes:
 - https
basePath: /openam
paths:
  /oauth2/.well-known/webfinger:
    get:
      summary: Get provider URL for end user
      description: |
        See <http://openid.net/connect/>
        and <https://tools.ietf.org/html/rfc7033>.
      tags:
        - OpenID Connect 1.0
      parameters:
        - name: resource
          in: query
          type: string
          required: true
        - name: rel
          in: query
          type: string
          required: true
          default: http://openid.net/specs/connect/1.0/issuer
        - name: realm
          in: query
          type: string
          description: OpenAM realm housing the OpenID Provider service
      responses:
        200:
          description: OpenID Provider metadata
          schema:
            type: object
  /oauth2/.well-known/openid-configuration:
    get:
      summary: OpenID Provider information
      description: See <http://openid.net/connect/>.
      tags:
        - OpenID Connect 1.0
      parameters:
        - name: realm
          in: query
          type: string
          description: OpenAM realm housing the OpenID Provider service
      responses:
        200:
          description: OpenID Provider metadata
          schema:
            type: object
  /oauth2/connect/register:
    post:
      summary: OpenID Connect dynamic registration
      description: See <http://openid.net/connect/>.
      tags:
        - OpenID Connect 1.0
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Bearer and OAuth 2.0 token for registration
          required: true
        - name: registration
          in: body
          schema:
            type: object
            properties:
              client_name:
                type: string
              redirect_uris:
                type: array
                items:
                  type: string
        - name: realm
          in: query
          type: string
          description: OpenAM realm housing the OpenID Provider service
      responses:
        200:
          description: OpenID Provider metadata
          schema:
            type: object
  /oauth2/authorize:
    get:
      summary: Authorization request
      description: |
        See RFC 6749. This is a mashup of multiple authorization request types.
      tags:
        - OAuth 2.0
      parameters:
        - name: response_type
          in: query
          type: string
          enum:
            - code
            - token
          required: true
        - name: client_id
          in: query
          description: See RFC 6749.
          type: string
          required: true
        - name: redirect_uri
          in: query
          description: See RFC 6749.
          type: string
        - name: scope
          in: query
          description: See RFC 6749.
          type: string
        - name: state
          in: query
          description: See RFC 6749.
          type: string
      responses:
        302:
          description: See RFC 6749.
          headers:
            Location:
              description: |
                Redirect URL with the `code`, and `state` values
                as query string parameters (authorization code grant)
                or fragment parameters (implict grant)

                OR with `error`, `error_description`, `error_uri`, and `state`
                values as query string parameters (authorization code grant)
                or fragment parameters (implict grant).

                This description needs more content from RFC 6749.

              type: string
  /oauth2/access_token:
    post:
      summary: Access token request
      description: |
        See RFC 6749. This is a mashup of multiple access token request types.
      tags:
        - OAuth 2.0
      parameters:
        - name: Authorization
          in: header
          type: string
          description: HTTP Basic Auth header with client credentials.
        - name: grant_type
          in: formData
          type: string
          enum:
            - authorization_code
            - client_credentials
            - password
            - refresh_token
            - urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Asaml2-bearer
          required: true
        - name: client_id
          in: formData
          type: string
        - name: client_secret
          in: formData
          type: string
        - name: code
          in: formData
          type: string
        - name: redirect_uri
          in: formData
          type: string
        - name: refresh_token
          in: formData
          type: string
        - name: username
          in: formData
          type: string
        - name: password
          in: formData
          type: string
        - name: scope
          in: formData
          type: string
        - name: assertion
          in: formData
          type: string
      responses:
        200:
          description: See RFC 6749.
          schema:
            type: object
            properties:
              access_token:
                type: string
              token_type:
                type: string
                default: Bearer
              expires_in:
                type: number
              refresh_token:
                type: string
              scope:
                type: string
              state:
                type: string
        302:
          description: See RFC 6749.
          headers:
            Location:
              description: |
               Redirect URL with the parameters in fragment.

               This description needs more content from RFC 6749.

              type: string
  /oauth2/device:
    post:
      summary: Device authorization request
      description: See draft-ietf-oauth-device-flow.
      tags:
        - OAuth 2.0
      parameters:
        - name: response_type
          in: formData
          type: string
          enum:
            - device_code
          required: true
        - name: client_id
          in: formData
          type: string
        - name: scope
          in: formData
          type: string
      responses:
        200:
          description: See draft-ietf-oauth-device-flow.
          schema:
            type: object
            properties:
              device_code:
                type: string
              user_code:
                type: string
              expires_in:
                type: number
              verification_uri:
                type: string
              interval:
                type: string
  /oauth2/introspect:
    post:
      summary: Retrieve token metadata
      description: See draft-ietf-oauth-introspection-04
      tags:
        - OAuth 2.0
      parameters:
        - name: Authorization
          in: header
          type: string
          description: HTTP Basic auth with client credentials
        - name: token
          in: query
          type: string
          description: The `tokenId` of the token to introspect
      responses:
        200:
          description: Token metadata
          schema:
            type: object
            properties:
              active:
                type: boolean
                description: true if still valid
              scope:
                type: string
                description: Space-separated list of scopes
              client_id:
                type: string
                description: Client having requested the token
              user_id:
                type: string
                description: User having authorized the token
              token_type:
                type: string
              exp:
                type: number
                description: Expiration time in seconds since the epoc
              sub:
                type: string
                description: Subject of the token
              iss:
                type: string
                description: Issuer of the token
  /oauth2/resource_set:
    get:
      summary: List resource sets
      description: See UMA specs.
      tags:
        - User-Managed Access
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Bearer and PAT
          required: true
        - name: realm
          in: query
          type: string
          description: OpenAM realm housing the UMA AS
      responses:
        200:
          description: UMA resource set IDs
          schema:
            type: array
            items:
              type: string
    post:
      summary: Register resource set
      description: See UMA specs.
      tags:
        - User-Managed Access
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Bearer and PAT
          required: true
        - name: realm
          in: query
          type: string
          description: OpenAM realm housing the UMA AS
        - name: resource_set
          in: body
          description: UMA resource set
          schema:
            type: object
            properties:
              name:
                type: string
              icon_uri:
                type: string
              scopes:
                type: array
                items:
                  type: string
              labels:
                type: array
                items:
                  type: string
              type:
                type: string
      responses:
        200:
          description: UMA resource set response
          schema:
            type: object
            properties:
              _id:
                type: string
              user_access_policy_uri:
                type: string
  /oauth2/resource_set/{id}:
    get:
      summary: Read resource set
      description: See UMA specs.
      tags:
        - User-Managed Access
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Bearer and PAT
          required: true
        - name: id
          in: path
          type: string
          description: Resource set ID
          required: true
        - name: realm
          in: query
          type: string
          description: OpenAM realm housing the UMA AS
      responses:
        200:
          description: UMA resource set
          headers:
            ETag:
              type: string
              description: Resource set revision identifier
          schema:
            type: object
            properties:
              _id:
                type: string
              user_access_policy_uri:
                type: string
              scopes:
                type: array
                items:
                  type: string
              name:
                type: string
              icon_uri:
                type: string
        404:
          description: Not Found
          schema:
            type: object
            properties:
              error:
                type: string
              error_description:
                type: string
    put:
      summary: Update resource set
      description: See UMA specs.
      tags:
        - User-Managed Access
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Bearer and PAT
          required: true
        - name: id
          in: path
          type: string
          description: Resource set ID
          required: true
        - name: resource_set
          in: body
          description: UMA resource set
          schema:
            type: object
            properties:
              name:
                type: string
              icon_uri:
                type: string
              scopes:
                type: array
                items:
                  type: string
              labels:
                type: array
                items:
                  type: string
              type:
                type: string
        - name: If-Match
          in: header
          type: string
          description: ETag for MVCC
        - name: realm
          in: query
          type: string
          description: OpenAM realm housing the UMA AS
      responses:
        200:
          description: UMA resource set
          headers:
            ETag:
              type: string
              description: Resource set revision identifier
          schema:
            type: object
            properties:
              _id:
                type: string
              user_access_policy_uri:
                type: string
        404:
          description: Not Found
          schema:
            type: object
            properties:
              error:
                type: string
              error_description:
                type: string
        412:
          description: ETag did not match
          schema:
            type: object
            properties:
              error:
                type: string
    delete:
      summary: Update resource set
      description: See UMA specs.
      tags:
        - User-Managed Access
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Bearer and PAT
          required: true
        - name: id
          in: path
          type: string
          description: Resource set ID
          required: true
        - name: If-Match
          in: header
          type: string
          description: ETag for MVCC
        - name: realm
          in: query
          type: string
          description: OpenAM realm housing the UMA AS
      responses:
        200:
          description: UMA resource set
          headers:
            ETag:
              type: string
              description: Resource set revision identifier
          schema:
            type: object
            properties:
              _id:
                type: string
              user_access_policy_uri:
                type: string
        404:
          description: Not Found
          schema:
            type: object
            properties:
              error:
                type: string
              error_description:
                type: string
        412:
          description: ETag did not match
          schema:
            type: object
            properties:
              error:
                type: string
  /oauth2/tokeninfo:
    get:
      summary: Token validation request
      description: >
        Endpoint to validate and retrieve information
        about access tokens based on the token ID
      tags:
        - OAuth 2.0
      parameters:
        - name: access_token
          in: query
          type: string
          description: The `tokenId` of the token to validate
      responses:
        200:
          description: Token information
          schema:
            type: object
            properties:
              _scope key_:
                type: string
                description: Value associated with a specific scope
              scope:
                type: array
                items:
                  type: string
              realm:
                type: string
                description: OpenAM realm where access token was granted
                default: /
              token_type:
                type: string
              expires_in:
                type: number
                description: Seconds to expiration
              access_token:
                type: string
                description: Token ID
  /oauth2/userinfo:
    get:
      summary: OpenID Connect user information
      description: See <http://openid.net/connect/>.
      tags:
        - OpenID Connect 1.0
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Bearer and OpenID Connect access token
          required: true
        - name: realm
          in: query
          type: string
          description: OpenAM realm housing the OpenID Provider service
      responses:
        200:
          description: OpenID user info
          schema:
            type: object
        401:
          description: Error response
          headers:
            WWW-Authenticate:
              type: string
              description: The `error` and `error_description`
  /uma{realm}/.well-known/uma-configuration:
    get:
      summary: UMA Authorization Server information
      description: See <https://kantarainitiative.org/confluence/display/uma/Home>.
      tags:
        - User-Managed Access
      parameters:
        - name: realm
          in: path
          type: string
          description: |
           OpenAM realm housing the Authorization Server. Starts with `/`.
          default: /
          required: true
      responses:
        200:
          description: UMA Authorization Server metadata
          schema:
            type: object
  /uma{realm}/authz_request:
    post:
      summary: Requesting party token request
      description: See <https://kantarainitiative.org/confluence/display/uma/Home>.
      tags:
        - User-Managed Access
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Bearer and AAT
          required: true
        - name: realm
          in: path
          type: string
          description: |
            OpenAM realm housing the Authorization Server. Starts with `/`.
          default: /
          required: true
        - name: request
          in: body
          description: Permission request ticket
          schema:
            type: object
            properties:
              ticket:
                type: string
      responses:
        201:
          description: Requesting party token
          schema:
            type: object
            properties:
              rpt:
                type: string
        403:
          description: Forbidden
          schema:
            type: object
            properties:
              error:
                type: string
              error_description:
                type: string
  /uma{realm}/permission_request:
    post:
      summary: Let UMA RS register access request from client
      description: See <https://kantarainitiative.org/confluence/display/uma/Home>.
      tags:
        - User-Managed Access
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Bearer and PAT
          required: true
        - name: realm
          in: path
          type: string
          description: |
            OpenAM realm housing the Authorization Server. Starts with `/`.
          default: /
          required: true
        - name: request
          in: body
          description: Access request registration
          schema:
            type: object
            properties:
              resource_set_id:
                type: string
              scopes:
                items:
                  type: string
      responses:
        201:
          description: Registration ticket
          schema:
            type: object
            properties:
              ticket:
                type: string
        403:
          description: Forbidden
          schema:
            type: object
            properties:
              error:
                type: string
              error_description:
                type: string
